1.final
   1)修饰变量:变量不能被改变
   2)修饰方法:方法不能被重写
   3)修饰类:类不能被继承

final修饰成员变量，只有两种初始化方式:
   1)声明同时初始化
   2)构造方法中初始化
final修饰局部变量，只要在用之前初始化
   
2.final static:常量
   1)必须同时初始化
   2)不能被改变,通过类名点来访问
   3)建议:常量名所有字母都大写,多个单词用_隔开
   4)编译器在编译时直接将常量替换为具体的值,效率高
   
3.抽象方法
   1)由abstract修饰
   2)只有方法的定义,没有方法具体的实现(连{}都没有)

4.抽象类
  1)由abstract修饰
  2)包含抽象方法的类必须是抽象类
  3)抽象类不能被实例化
  4)抽象类是需要被继承的,子类:
    4.1)重写所有抽象方法--------一般常规的用法
    4.2)也声明为抽象类
  5)抽象类的意义:
    5.1)封装子类共有的属性和行为-------------代码复用
    5.2)给所有的子类提供一种统一的类型-------向上造型
    5.3)可以包含抽象方法,为所有子类提供统一的入口
        子类的实现不同,但入口是一致的

5.接口
  1)是一个标准,规范----制定方
    遵守了这个标准,就能干某件事
  2)接口是一种数据类型(引用类型)
  3)由interface定义
  4)只能包含常量和抽象方法
  5)接口不能被实例化
  6)接口是要被实现的,实现类:
    必须重写接口中的所有抽象方法
  7)一个类可以实现多个接口,用逗号隔开
    若又继承又实现时,应先继承后实现 
  8)接口可以继承接口
  
  
接口是完全抽象的抽象类
类和类--------------------继承
接口和接口----------------继承
接口和类------------------实现

  