package edu.cj.javase.day0711;

public class Demo1 {

	/**
	 * 二维数组其本质由多个一位数组组合而成的数列(行列式、矩阵)
	 * 在一维数组中得到数组元素的个数用 数组名.length即可
	 * 在二维数组中 数组名.length得到的是二维数组的行数
	 * 如果要得到某一行中有多少列则需要用到 数组名[行的索引].length即可
	 * 下标或者索引从0开始,所以最后一行的索引为 数组名.length-1
	 * 最后一列的索引为 数组名[行的索引].length-1
	 * 
	 * []是标明数组的标志,一对[]表示一个一维数组
	 * 两对[][]则表示声明的是二维数组
	 * 二维数组的语法:
	 *     1.先声明后分配空间再赋值
	 *         1.1  数据类型 [][] 数组名 ;
	 *         1.2  数据类型  数组名[][] ;   
	 *         数组名 = new 数据类型[行数][列数];
	 *         
	 *         数组名[行][列] = 值;
	 *        
	 *     2.声明即分配空间再赋值
	 *     数据类型 [][] 数组名  = new 数据类型[行数][列数];
	 *     数据类型  数组名[][]  = new 数据类型[行数][列数];
	 *     数组名[行][列] = 值;
	 *     
	 *     3.声明数组的同时完成赋值
	 *     数据类型 [][] 数组名  = new 数据类型[][]{{值1,值2,...,值n},...{[行][列]}};
	 *     数据类型  数组名[][]  = new 数据类型[][]{{值1,值2,...,值n},...{[行][列]}};
	 *     注意!!!此时数组的长度由具体的值的个数来确定,一定不要显示的加上数组长度
	 *     如下就是错误的
	 *        int[][] nums = new int[3][]{{1,2},{3,4},{5,6}}; 
	 *     4. 声明数组的同时完成赋值
	 *       数据类型 [][] 数组名  = {{值1,值2,...,值n},...{值1,值2,...,值n}};
	 *     数据类型  数组名[][]  = {{值1,值2,...,值n},...{值1,值2,...,值n}};
	 *     此时声明数组只能用一条语句完成,不能分割成两条即先声明后赋值的方式
	 *     
	 *     一维数组用一个循环即可遍历所有的元素,那么二维数组由行和列构成的一个矩阵，那么对应的元素个数总共有
	 *     行数*列数 如  int[][]nums = new int[2][3];可以存储2*3计6个元素
	 *     如果需要遍历则先需要遍历行数,之后再由行来遍历该行所对应的列数，需要用到循环的嵌套方可对二维数组的元素的遍历
	 *     
	 */
	public static void main(String[] args) {
		int[][]nums = {{1,2,3},{2,3,4}};
		//二维数组的循环遍历，先行后列
		//外层循环控制行数 数组名.length表示行的个数
		for (int i = 0; i < nums.length; i++) {
			//内层循环控制列数 数组名[行的索引].length表示该行对应的列数
			for (int j = 0; j < nums[i].length; j++) {
				System.out.print(nums[i][j]+" ");
			}
		}

	}

}
