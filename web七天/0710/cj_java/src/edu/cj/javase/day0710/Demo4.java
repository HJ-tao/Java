package edu.cj.javase.day0710;

public class Demo4 {

	/**
	 * 循环结构:
	 *    重复执行的代码
	 * java中的循环分类:
	 *    1. while循环――――当型循环即当满足某个条件的时候循环一直执行,如果对应的条件为假了则循环结束
	 *    语法:
	 *       循环变量;
	 *       while(循环条件){
	 *          循环操作的语句;
	 *          ....
	 *          改变循环变量的初始值;
	 *       } 
	 *       
	 *     注意!!! 在循环中有四个要素一个都不能少哦,当然四个要素可以缩写成三个
	 *     一般可以将第二个要素与第四个要素进行合并 
	 *     while循环的四要素:
	 *        1.初始化循环的变量――――――即循环从哪里开始，一般用整型、布尔型、字符串等表达式来表示
	 *        如:   int i = 1; String ans = "yes" boolean flag = true;.....
	 *        2.循环条件――――――即该循环结构执行的次数.它的值的类型为boolean类型，一般用关系表达式、逻辑表达式或者是boolean
	 *        类型的表达式  如  while(i<101)   while(flag)  while("yes".equals(ans))   
	 *        3.循环的操作语句――――――即对应的循环体,重复执行的代码，可以是多条语句
	 *        4.改变循环变量的初始值来保证循环正常结束。如果没有改变循环变量的值那么循环就会变成死循环 
	 *        一般可以用循环次数的自增或者自减完成,如  i++ j--  或者重新为循环变量赋值   ans = "no" flag = false
	 *     注意!!!!
	 *     
	 *        while循环结构中的"()"后面一定不要加上了";"，加上了分号程序不会报错但整个循环的结构就被破坏了
	 *        就如同if结构的小括号()后面跟上了";"
	 *        加了";"后的if结构
	 */
	public static void main(String[] args) {
		 int i = 0; //第一要素
		 int sum = 0;
		 //第2、4两个要素合并
		 while (++i<=100) //第二要素
		 {
			 //+= -= *= /= %= 这个称之为复合型的赋值运算符  等同于  sum = sum + i的效果;但所表达式的意思有区别
			 sum+=i;  //第三要素
			 //i++;//第四要素
		 }
		 System.out.println("1+2+3+...+100="+sum);
        /*
         * 数据类型的转换:
         *   1.自动类型转换___当对应的表达式中有大的数据类型和小的数据类型在一起时,此时的小数据类型会自动上升为大的数据类型
         *   我们称之为自动转换，也称之为隐式转换
         *   2.强制类型转换――――当对应的表达式中有大的数据类型和小的数据类型在一起时，要将大的数据转换为小的数据类型时必须采取强制转换
         *   而转换后对应的大的数据精度会丢失.强制转换又称显式转换
         *     对应的语法:
         *         (要转换的数据类型)大的数据类型的数据     如  :   int num = (int) 23.5; num最后为23,小数点部分丢失了
         * 
         */
		 short t = 12;
		// t+=12; //等同于  t = t+12; 复合型赋值运算符在进行计算前可以实现类型的自动转换
		 t = (short)(t+12); //等号右边的表达式已经自动转换为int类型,而左边的t为short类型
		 System.out.println(t);
	}

}
